{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94272\\\\Desktop\\\\Job\\\\my-personal_website\\\\beattather\\\\src\\\\pages\\\\NoteHelper\\\\index.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Breadcrumb, Form, Input, Upload, Button, message, Typography, Progress, Space, Checkbox, Row } from 'antd';\nimport { PlusOutlined, InboxOutlined } from '@ant-design/icons';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useStore } from '@/store';\nimport FormData from 'form-data';\nimport './index.scss';\nimport { useTranslation } from 'react-i18next';\nimport { tokenCounter, handleAudioUpload } from '@/utils';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require('openai');\nconst {\n  Title,\n  Paragraph\n} = Typography;\nclass CustomFormData extends FormData {\n  getHeaders() {\n    return {};\n  }\n}\nconst NoteHelper = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    t\n  } = useTranslation();\n  const {\n    apiStore\n  } = useStore();\n  const [response, setResponse] = useState('');\n  const [audioList, setAudioList] = useState([]);\n  const [progressPercent, setProgressPercent] = useState(0);\n  const [preferences, setPreferences] = useState([]);\n  const [customContent, setCustomContent] = useState('');\n  const [removeClutter, setRemoveClutter] = useState(false);\n  const [customChecked, setCustomChecked] = useState(false);\n  useEffect(() => {\n    setCustomChecked(preferences.includes(t('custom')));\n  }, [preferences, t]);\n  const CustomCheckbox = props => {\n    _s();\n    const onClick = () => {\n      if (!customChecked) {\n        onChangePreferences([...preferences, t('custom')]);\n      } else {\n        onChangePreferences(preferences.filter(p => p !== t('custom')));\n      }\n    };\n    useEffect(() => {\n      setCustomChecked(preferences.includes(t('custom')));\n    }, [preferences, t]);\n    return /*#__PURE__*/_jsxDEV(Checkbox, {\n      ...props,\n      onClick: onClick,\n      children: t('custom')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  };\n  _s(CustomCheckbox, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const callOpenAICompletionAPI = async _ref => {\n    let {\n      title,\n      formType,\n      content,\n      remarks\n    } = _ref;\n    setProgressPercent(33);\n    const configuration = new Configuration({\n      organization: 'org-9QcLes4mblKdTtxRSBBYJTCd',\n      apiKey: apiStore.apiKey,\n      formDataCtor: CustomFormData\n    });\n    delete configuration.baseOptions.headers['User-Agent'];\n    const openai = new OpenAIApi(configuration);\n    let audio_text = '';\n    const hasCustomContent = customContent.trim() !== '';\n    const otherPreferences = preferences.filter(option => option !== t('custom'));\n    console.log(customContent);\n    const preferredOutput = hasCustomContent ? (otherPreferences.length > 0 ? otherPreferences.join(', ') + ', ' : '') + customContent : preferences.join(', ');\n    if (audioList.length > 0) {\n      console.log(audioList[0]);\n      const audioFile = audioList[0];\n      const formData = new FormData();\n      formData.append('file', audioFile, audioFile.name);\n      const audioTranscription = await openai.createTranscription(audioFile, 'whisper-1');\n      audio_text = audioTranscription.data.text;\n    } else if (!content) {\n      message.error(t('nothingError'));\n      return;\n    }\n    setProgressPercent(66);\n    let prompt = `${t('noteHelper.prompt.intro')} \\n`;\n    if (title) {\n      prompt += `${t('noteHelper.prompt.title')}: ${title}\\n`;\n    }\n    if (formType) {\n      prompt += `${t('noteHelper.prompt.formType')}: ${formType}\\n`;\n    }\n    if (content) {\n      prompt += `${t('noteHelper.prompt.content')}: ${content}\\n`;\n    }\n    if (audio_text) {\n      prompt += `${t('noteHelper.prompt.audioText')}: ${audio_text}\\n`;\n    }\n    if (preferredOutput) {\n      prompt += `${t('noteHelper.prompt.preferences')}: ${preferredOutput}\\n`;\n    }\n    if (remarks || removeClutter) {\n      const remarksContent = `${removeClutter ? t('noteHelper.prompt.removeClutter') : ''}${remarks ? ' ' + remarks : ''}`;\n      prompt += `${t('remarks')}: ${remarksContent.trim()}\\n`;\n    }\n    prompt += `${t('noteHelper.prompt.sayLng')}`;\n    console.log(prompt);\n    const promptTokenCount = tokenCounter(prompt);\n    const maxTokens = 3700 - promptTokenCount;\n    console.log(maxTokens);\n    /*\r\n    //for text-davinci-003\r\n    const getResponse = await openai.createCompletion({\r\n      model: 'text-davinci-003',\r\n      prompt,\r\n      temperature: 0.5,\r\n      max_tokens: maxTokens,\r\n      top_p: 1.0,\r\n      frequency_penalty: 0.0,\r\n      presence_penalty: 0.0,\r\n    });\r\n    */\n    const response = await apiStore.callModel(prompt, apiStore.selectedModel, newResponse => {\n      setResponse(prevResponse => prevResponse + newResponse);\n    });\n\n    //setResponse(getResponse.data.choices[0].text); //for text-davinci-003\n    setProgressPercent(100);\n  };\n  const handleSubmit = values => {\n    const {\n      title,\n      formType,\n      content,\n      remarks\n    } = values;\n    callOpenAICompletionAPI({\n      title,\n      formType,\n      content,\n      remarks\n    });\n  };\n  const handleUpload = async file => {\n    if (await handleAudioUpload(file, audioList, t)) {\n      setAudioList([file]);\n    } else {\n      console.log(false, audioList);\n    }\n    return false;\n  };\n\n  // \"偏好\"复选框改变函数\n  const onChangePreferences = checkedValues => {\n    setPreferences(checkedValues);\n  };\n  // \"自定义内容\"输入框内容改变函数\n  const onCustomContentChange = e => {\n    setCustomContent(e.target.value);\n  };\n\n  // \"是否除去废话\"状态改变函数\n  const toggleRemoveClutter = () => {\n    setRemoveClutter(!removeClutter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        separator: \">\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: t('homeTitle')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: t('noteHelper.breadcrumb.noteAssistant')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          className: \"progress_circle\",\n          type: \"circle\",\n          percent: progressPercent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            children: t('resultTitle')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: response ? response.replace(/\\n/g, '<br/>') : ''\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        initialValues: {\n          title: '',\n          formType: '',\n          content: ''\n        },\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.title'),\n          name: \"title\",\n          rules: [{\n            required: false,\n            message: t('noteHelper.titlePlaceholder')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: t('noteHelper.titlePlaceholder'),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.formType'),\n          name: \"formType\",\n          rules: [{\n            required: false,\n            message: t('noteHelper.formTypePlaceholder')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: t('noteHelper.formTypePlaceholder'),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('upload.uploadAudio'),\n          children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n            name: \"audio\",\n            listType: \"picture-card\",\n            className: \"avatar-uploader\",\n            showUploadList: {\n              showPreviewIcon: true,\n              showRemoveIcon: true,\n              showDownloadIcon: false\n            },\n            fileList: audioList,\n            beforeUpload: file => {\n              (async () => {\n                if (await handleUpload(file)) {\n                  setAudioList([file]);\n                  console.log(await handleUpload(file));\n                } else {\n                  console.log(false, audioList);\n                }\n              })();\n              return false;\n            },\n            onRemove: file => {\n              // Remove the selected file from the audioList state\n              setAudioList(oldAudioList => oldAudioList.filter(item => item.uid !== file.uid));\n            },\n            onPreview: () => {},\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: t('dragger.uploadText')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: t('dragger.uploadHint')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.outputPreferences'),\n          name: \"preferences\",\n          rules: [{\n            required: true,\n            type: 'array',\n            min: 1,\n            message: t('noteHelper.preferencesOptions.requiredCheckMessage')\n          }],\n          children: [/*#__PURE__*/_jsxDEV(Checkbox.Group, {\n            onChange: onChangePreferences,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                value: t('noteHelper.preferencesOptions.summary'),\n                children: t('noteHelper.preferencesOptions.summary')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: t('noteHelper.preferencesOptions.outline'),\n                children: t('noteHelper.preferencesOptions.outline')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), customChecked && /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: t(\"customPlaceholder\"),\n            style: {\n              width: '100%',\n              marginTop: 8\n            },\n            value: customContent,\n            onChange: onCustomContentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.textContent'),\n          name: \"content\",\n          rules: [{\n            required: false,\n            message: t('noteHelper.contentRulesMessage')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            rows: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('remarks'),\n          name: \"remarks\",\n          rules: [{\n            required: false,\n            message: t('remarksPlaceholder')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: t('remarksPlaceholder'),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            type: removeClutter ? 'primary' : 'default',\n            onClick: toggleRemoveClutter,\n            children: t('noteHelper.removeClutterButton')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"summary\",\n            size: \"large\",\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: t('noteHelper.summarizeButton')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s2(NoteHelper, \"LYjewdp98QxRMlR/B2JhNLfAt+M=\", false, function () {\n  return [useTranslation, useStore];\n});\n_c = NoteHelper;\nexport default _c2 = observer(NoteHelper);\nvar _c, _c2;\n$RefreshReg$(_c, \"NoteHelper\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","Card","Breadcrumb","Form","Input","Upload","Button","message","Typography","Progress","Space","Checkbox","Row","PlusOutlined","InboxOutlined","v4","uuidv4","useStore","FormData","useTranslation","tokenCounter","handleAudioUpload","observer","jsxDEV","_jsxDEV","Configuration","OpenAIApi","require","Title","Paragraph","CustomFormData","getHeaders","NoteHelper","_s2","_s","$RefreshSig$","t","apiStore","response","setResponse","audioList","setAudioList","progressPercent","setProgressPercent","preferences","setPreferences","customContent","setCustomContent","removeClutter","setRemoveClutter","customChecked","setCustomChecked","includes","CustomCheckbox","props","onClick","onChangePreferences","filter","p","children","fileName","_jsxFileName","lineNumber","columnNumber","callOpenAICompletionAPI","_ref","title","formType","content","remarks","configuration","organization","apiKey","formDataCtor","baseOptions","headers","openai","audio_text","hasCustomContent","trim","otherPreferences","option","console","log","preferredOutput","length","join","audioFile","formData","append","name","audioTranscription","createTranscription","data","text","error","prompt","remarksContent","promptTokenCount","maxTokens","callModel","selectedModel","newResponse","prevResponse","handleSubmit","values","handleUpload","file","checkedValues","onCustomContentChange","e","target","value","toggleRemoveClutter","separator","Item","href","className","type","percent","level","dangerouslySetInnerHTML","__html","replace","initialValues","onFinish","label","rules","required","placeholder","style","width","Dragger","listType","showUploadList","showPreviewIcon","showRemoveIcon","showDownloadIcon","fileList","beforeUpload","onRemove","oldAudioList","item","uid","onPreview","min","Group","onChange","marginTop","TextArea","rows","size","htmlType","_c","_c2","$RefreshReg$"],"sources":["C:/Users/94272/Desktop/Job/my-personal_website/beattather/src/pages/NoteHelper/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  Breadcrumb,\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  message,\r\n  Typography,\r\n  Progress,\r\n  Space,\r\n  Checkbox,\r\n  Row,\r\n} from 'antd';\r\nimport { PlusOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useStore } from '@/store';\r\nimport FormData from 'form-data';\r\nimport './index.scss';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { tokenCounter, handleAudioUpload } from '@/utils'\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst { Configuration, OpenAIApi } = require('openai');\r\nconst { Title, Paragraph } = Typography;\r\n\r\nclass CustomFormData extends FormData {\r\n  getHeaders() {\r\n    return {};\r\n  }\r\n}\r\n\r\nconst NoteHelper = () => {\r\n  const { t } = useTranslation();\r\n  const { apiStore } = useStore();\r\n  const [response, setResponse] = useState('');\r\n  const [audioList, setAudioList] = useState([]);\r\n  const [progressPercent, setProgressPercent] = useState(0);\r\n  const [preferences, setPreferences] = useState([]);\r\n  const [customContent, setCustomContent] = useState('');\r\n  const [removeClutter, setRemoveClutter] = useState(false);\r\n  const [customChecked, setCustomChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCustomChecked(preferences.includes(t('custom')));\r\n  }, [preferences, t]);\r\n  \r\n  const CustomCheckbox = (props) => {\r\n    const onClick = () => {\r\n      if (!customChecked) {\r\n        onChangePreferences([...preferences, t('custom')]);\r\n      } else {\r\n        onChangePreferences(preferences.filter((p) => p !== t('custom')));\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      setCustomChecked(preferences.includes(t('custom')));\r\n    }, [preferences, t]);\r\n  \r\n    return <Checkbox {...props} onClick={onClick}>{t('custom')}</Checkbox>;\r\n  };\r\n\r\n  const callOpenAICompletionAPI = async ({ title, formType, content, remarks}) => {\r\n    setProgressPercent(33);\r\n    const configuration = new Configuration({\r\n      organization: 'org-9QcLes4mblKdTtxRSBBYJTCd',\r\n      apiKey: apiStore.apiKey,\r\n      formDataCtor: CustomFormData,\r\n    });\r\n    \r\n    delete configuration.baseOptions.headers['User-Agent'];\r\n    const openai = new OpenAIApi(configuration);\r\n  \r\n    let audio_text = '';\r\n  \r\n    const hasCustomContent = customContent.trim() !== '';\r\n    const otherPreferences = preferences.filter(option => option !== t('custom'));\r\n    console.log(customContent);\r\n    const preferredOutput = hasCustomContent\r\n      ? (otherPreferences.length > 0 ? otherPreferences.join(', ') + ', ' : '') + customContent\r\n      : preferences.join(', ');\r\n  \r\n    \r\n    if (audioList.length > 0) {\r\n      console.log(audioList[0]);\r\n      const audioFile = audioList[0];\r\n    \r\n      const formData = new FormData();\r\n      formData.append('file', audioFile, audioFile.name);\r\n    \r\n      const audioTranscription = await openai.createTranscription(audioFile, 'whisper-1');\r\n      audio_text = audioTranscription.data.text;\r\n    } else if (!content) {\r\n      message.error(t('nothingError'));\r\n      return;\r\n    }\r\n    \r\n    setProgressPercent(66);\r\n    let prompt = `${t('noteHelper.prompt.intro')} \\n`;\r\n    if (title) {\r\n      prompt += `${t('noteHelper.prompt.title')}: ${title}\\n`;\r\n    }\r\n    \r\n    if (formType) {\r\n      prompt += `${t('noteHelper.prompt.formType')}: ${formType}\\n`;\r\n    }\r\n    \r\n    if (content) {\r\n      prompt += `${t('noteHelper.prompt.content')}: ${content}\\n`;\r\n    }\r\n\r\n    if (audio_text) {\r\n      prompt += `${t('noteHelper.prompt.audioText')}: ${audio_text}\\n`;\r\n    }\r\n\r\n    if (preferredOutput) {\r\n      prompt += `${t('noteHelper.prompt.preferences')}: ${preferredOutput}\\n`;\r\n    }\r\n    if (remarks || removeClutter) {\r\n      const remarksContent = `${removeClutter ? t('noteHelper.prompt.removeClutter') : ''}${remarks ? ' ' + remarks : ''}`;\r\n      prompt += `${t('remarks')}: ${remarksContent.trim()}\\n`;\r\n    }\r\n    \r\n    \r\n    prompt += `${t('noteHelper.prompt.sayLng')}`\r\n    console.log(prompt);\r\n    const promptTokenCount = tokenCounter(prompt);\r\n    const maxTokens = 3700 - promptTokenCount;\r\n    console.log(maxTokens);\r\n    /*\r\n    //for text-davinci-003\r\n    const getResponse = await openai.createCompletion({\r\n      model: 'text-davinci-003',\r\n      prompt,\r\n      temperature: 0.5,\r\n      max_tokens: maxTokens,\r\n      top_p: 1.0,\r\n      frequency_penalty: 0.0,\r\n      presence_penalty: 0.0,\r\n    });\r\n    */\r\n    const response = await apiStore.callModel(prompt, apiStore.selectedModel, (newResponse) => {\r\n      setResponse((prevResponse) => prevResponse + newResponse);\r\n    });\r\n    \r\n    //setResponse(getResponse.data.choices[0].text); //for text-davinci-003\r\n    setProgressPercent(100);\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    const { title, formType, content, remarks } = values;\r\n\r\n    callOpenAICompletionAPI({ title, formType, content, remarks});\r\n  };\r\n\r\n  const handleUpload = async (file) => {\r\n    if (await handleAudioUpload(file, audioList, t)) {\r\n      setAudioList([file]);\r\n    } else {\r\n      console.log(false, audioList);\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  \r\n  \r\n  // \"偏好\"复选框改变函数\r\n  const onChangePreferences = (checkedValues) => {\r\n    setPreferences(checkedValues);\r\n  };\r\n  // \"自定义内容\"输入框内容改变函数\r\n  const onCustomContentChange = (e) => {\r\n    setCustomContent(e.target.value);\r\n  };\r\n\r\n  // \"是否除去废话\"状态改变函数\r\n  const toggleRemoveClutter = () => {\r\n    setRemoveClutter(!removeClutter);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Card\r\n        title={\r\n          <Breadcrumb separator=\">\">\r\n            <Breadcrumb.Item>\r\n              <a href=\"#\">{t('homeTitle')}</a>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>{t('noteHelper.breadcrumb.noteAssistant')}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        }\r\n      >\r\n        <Space>\r\n          <Progress className=\"progress_circle\" type=\"circle\" percent={progressPercent} />\r\n          <div>\r\n            <Title level={3}>{t('resultTitle')}</Title>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: response ? response.replace(/\\n/g, '<br/>') : '',\r\n              }}\r\n            ></div>\r\n          </div>\r\n          \r\n        </Space>\r\n      </Card>\r\n      <Card>\r\n        <Form initialValues={{ title: '', formType: '', content: '' }} onFinish={handleSubmit}>\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.title')}\r\n            name=\"title\"\r\n            rules={[{ required: false, message: t('noteHelper.titlePlaceholder') }]}\r\n          >\r\n            <Input placeholder={t('noteHelper.titlePlaceholder')} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.formType')}\r\n            name=\"formType\"\r\n            rules={[{ required: false, message: t('noteHelper.formTypePlaceholder') }]}\r\n          >\r\n            <Input placeholder={t('noteHelper.formTypePlaceholder')} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n\r\n          <Form.Item label={t('upload.uploadAudio')}>\r\n            <Upload.Dragger\r\n              name=\"audio\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader\"\r\n              showUploadList={{\r\n                showPreviewIcon: true,\r\n                showRemoveIcon: true,\r\n                showDownloadIcon: false,\r\n              }}\r\n              fileList={audioList}\r\n              beforeUpload={(file) => {\r\n                (async () => {\r\n                  if (await handleUpload(file)) {\r\n                    setAudioList([file]);\r\n                    console.log(await handleUpload(file));\r\n                  } else {\r\n\r\n                    console.log(false, audioList);\r\n                  }\r\n                })();\r\n                return false;\r\n              }}\r\n              onRemove={(file) => {\r\n                // Remove the selected file from the audioList state\r\n                setAudioList((oldAudioList) => oldAudioList.filter((item) => item.uid !== file.uid));\r\n              }}\r\n              onPreview={() => {}}\r\n              \r\n            >\r\n              <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n              </p>\r\n              <p className=\"ant-upload-text\">{t('dragger.uploadText')}</p>\r\n              <p className=\"ant-upload-hint\">{t('dragger.uploadHint')}</p>\r\n            </Upload.Dragger>\r\n          </Form.Item>\r\n          \r\n\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.outputPreferences')}\r\n            name=\"preferences\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: 'array',\r\n                min: 1,\r\n                message: t('noteHelper.preferencesOptions.requiredCheckMessage'),\r\n              },\r\n            ]}\r\n          >\r\n            <Checkbox.Group onChange={onChangePreferences}>\r\n              <Row>\r\n                <Checkbox value={t('noteHelper.preferencesOptions.summary')}>\r\n                  {t('noteHelper.preferencesOptions.summary')}\r\n                </Checkbox>\r\n                <Checkbox value={t('noteHelper.preferencesOptions.outline')}>\r\n                  {t('noteHelper.preferencesOptions.outline')}\r\n                </Checkbox>\r\n                <CustomCheckbox />\r\n              </Row>\r\n              </Checkbox.Group>\r\n            {customChecked && (\r\n            <Input\r\n              placeholder={t(\"customPlaceholder\")}\r\n              style={{ width: '100%', marginTop: 8 }}\r\n              value={customContent}\r\n              onChange={onCustomContentChange}\r\n            />\r\n          )}\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.textContent')}\r\n            name=\"content\"\r\n            rules={[{ required: false, message: t('noteHelper.contentRulesMessage') }]}\r\n          >\r\n            <Input.TextArea rows={10} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={t('remarks')}\r\n            name=\"remarks\"\r\n            rules={[{ required: false, message: t('remarksPlaceholder') }]}\r\n          >\r\n            <Input placeholder={t('remarksPlaceholder')} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              size=\"large\"\r\n              type={removeClutter ? 'primary' : 'default'}\r\n              onClick={toggleRemoveClutter}\r\n            >\r\n              {t('noteHelper.removeClutterButton')}\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button className=\"summary\" size=\"large\" type=\"primary\" htmlType=\"submit\">\r\n              {t('noteHelper.summarizeButton')}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NoteHelper);\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}