{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94272\\\\Desktop\\\\Job\\\\my-personal_website\\\\Roundblock_Takehome\\\\Roundblock_Takehome_front\\\\src\\\\pages\\\\Home\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./index.scss\";\nimport { Card, Form, Button, message, Upload, Popover } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useStore } from \"@/store\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport JSZip from 'jszip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState(null);\n  const [imageRef, setImageRef] = useState(null);\n  const [crop, setCrop] = useState({\n    aspect: 1,\n    unit: \"%\"\n  });\n  const [croppedImageBlob, setCroppedImageBlob] = useState(null);\n  const handleChange = info => {\n    if (info.file.status === \"done\") {\n      setImageUrl(URL.createObjectURL(info.file.originFileObj));\n    }\n  };\n  const onImageLoaded = image => {\n    setImageRef(image);\n  };\n  const makeClientCrop = async crop => {\n    if (imageRef && crop.width && crop.height) {\n      const croppedImageBlob = await getCroppedImage(imageRef, crop, \"newCrop.jpeg\");\n      setCroppedImageBlob(croppedImageBlob);\n    }\n  };\n  const getCroppedImage = (image, crop, fileName) => {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          console.error(\"Canvas is empty\");\n          return;\n        }\n        blob.name = fileName;\n        resolve(blob);\n      }, \"image/jpeg\");\n    });\n  };\n  const handleUpload = async () => {\n    if (!croppedImageBlob) {\n      message.error(\"请先上传并裁剪图片！\");\n      return;\n    }\n    const zip = new JSZip();\n    zip.file(`${Date.now()}.jpeg`, croppedImageBlob);\n    const content = await zip.generateAsync({\n      type: \"blob\"\n    });\n    // 使用 content 进行上传操作\n\n    // 您需要根据您实际使用的 API 接口进行修改：\n    // const formData = new FormData();\n    // formData.append(\"file\", content, `${Date.now()}.zip`);\n    // axios.post(\"/upload/zip\", formData).then((response) => {\n    //   message.success(\"图片已成功上传\");\n    // });\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n      accept: \"image/*\",\n      showUploadList: false,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u70B9\\u51FB\\u8FD9\\u91CC\\u6216\\u8005\\u62D6\\u62FD\\u56FE\\u7247\\u5230\\u6B64\\u5904\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crop-image-container\",\n    children: [uploadButton, imageUrl && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: imageUrl,\n      crop: crop,\n      ruleOfThirds: true,\n      onImageLoaded: onImageLoaded,\n      onComplete: makeClientCrop,\n      onChange: newCrop => setCrop(newCrop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), croppedImageBlob && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Crop preview\",\n        src: URL.createObjectURL(croppedImageBlob)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpload,\n      type: \"primary\",\n      children: \"\\u4E0A\\u4F20\\u88C1\\u526A\\u540E\\u7684\\u56FE\\u7247\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"c2uZPvgz5DfnPgSVVD9GA89dUho=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Card","Form","Button","message","Upload","Popover","InboxOutlined","useStore","ReactCrop","JSZip","jsxDEV","_jsxDEV","Home","_s","imageUrl","setImageUrl","imageRef","setImageRef","crop","setCrop","aspect","unit","croppedImageBlob","setCroppedImageBlob","handleChange","info","file","status","URL","createObjectURL","originFileObj","onImageLoaded","image","makeClientCrop","width","height","getCroppedImage","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","console","error","name","handleUpload","zip","Date","now","content","generateAsync","type","uploadButton","children","Dragger","accept","showUploadList","onChange","className","_jsxFileName","lineNumber","columnNumber","src","ruleOfThirds","onComplete","newCrop","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/94272/Desktop/Job/my-personal_website/Roundblock_Takehome/Roundblock_Takehome_front/src/pages/Home/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  Button,\r\n  message,\r\n  Upload,\r\n  Popover,\r\n} from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { useStore } from \"@/store\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport JSZip from 'jszip';\r\n\r\nconst Home = () => {\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [imageRef, setImageRef] = useState(null);\r\n  const [crop, setCrop] = useState({ aspect: 1, unit: \"%\" });\r\n  const [croppedImageBlob, setCroppedImageBlob] = useState(null);\r\n\r\n  const handleChange = info => {\r\n    if (info.file.status === \"done\") {\r\n      setImageUrl(URL.createObjectURL(info.file.originFileObj));\r\n    }\r\n  };\r\n\r\n  const onImageLoaded = image => {\r\n    setImageRef(image);\r\n  };\r\n\r\n  const makeClientCrop = async crop => {\r\n    if (imageRef && crop.width && crop.height) {\r\n      const croppedImageBlob = await getCroppedImage(\r\n        imageRef,\r\n        crop,\r\n        \"newCrop.jpeg\"\r\n      );\r\n      setCroppedImageBlob(croppedImageBlob);\r\n    }\r\n  };\r\n\r\n  const getCroppedImage = (image, crop, fileName) => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          console.error(\"Canvas is empty\");\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        resolve(blob);\r\n      }, \"image/jpeg\");\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!croppedImageBlob) {\r\n      message.error(\"请先上传并裁剪图片！\");\r\n      return;\r\n    }\r\n  \r\n    const zip = new JSZip();\r\n    zip.file(`${Date.now()}.jpeg`, croppedImageBlob);\r\n    const content = await zip.generateAsync({ type: \"blob\" });\r\n    // 使用 content 进行上传操作\r\n  \r\n    // 您需要根据您实际使用的 API 接口进行修改：\r\n    // const formData = new FormData();\r\n    // formData.append(\"file\", content, `${Date.now()}.zip`);\r\n    // axios.post(\"/upload/zip\", formData).then((response) => {\r\n    //   message.success(\"图片已成功上传\");\r\n    // });\r\n  };\r\n  \r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <Upload.Dragger accept=\"image/*\" showUploadList={false} onChange={handleChange}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p>点击这里或者拖拽图片到此处上传</p>\r\n      </Upload.Dragger>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"crop-image-container\">\r\n      {uploadButton}\r\n      {imageUrl && (\r\n        <ReactCrop\r\n          src={imageUrl}\r\n          crop={crop}\r\n          ruleOfThirds\r\n          onImageLoaded={onImageLoaded}\r\n          onComplete={makeClientCrop}\r\n          onChange={newCrop => setCrop(newCrop)}\r\n        />\r\n      )}\r\n      {croppedImageBlob && (\r\n        <div>\r\n          <img alt=\"Crop preview\" src={URL.createObjectURL(croppedImageBlob)} />\r\n        </div>\r\n      )}\r\n\r\n      <Button onClick={handleUpload} type=\"primary\">\r\n        上传裁剪后的图片\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,SACEC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,OAAO,QACF,MAAM;AACb,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,QAAQ,QAAQ,SAAS;AAClC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAO,qCAAqC;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,MAAM,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAI,CAAC,CAAC;EAC1D,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMyB,YAAY,GAAGC,IAAI,IAAI;IAC3B,IAAIA,IAAI,CAACC,IAAI,CAACC,MAAM,KAAK,MAAM,EAAE;MAC/BZ,WAAW,CAACa,GAAG,CAACC,eAAe,CAACJ,IAAI,CAACC,IAAI,CAACI,aAAa,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,MAAMC,aAAa,GAAGC,KAAK,IAAI;IAC7Bf,WAAW,CAACe,KAAK,CAAC;EACpB,CAAC;EAED,MAAMC,cAAc,GAAG,MAAMf,IAAI,IAAI;IACnC,IAAIF,QAAQ,IAAIE,IAAI,CAACgB,KAAK,IAAIhB,IAAI,CAACiB,MAAM,EAAE;MACzC,MAAMb,gBAAgB,GAAG,MAAMc,eAAe,CAC5CpB,QAAQ,EACRE,IAAI,EACJ,cAAc,CACf;MACDK,mBAAmB,CAACD,gBAAgB,CAAC;IACvC;EACF,CAAC;EAED,MAAMc,eAAe,GAAGA,CAACJ,KAAK,EAAEd,IAAI,EAAEmB,QAAQ,KAAK;IACjD,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,MAAM,GAAGT,KAAK,CAACU,YAAY,GAAGV,KAAK,CAACE,KAAK;IAC/C,MAAMS,MAAM,GAAGX,KAAK,CAACY,aAAa,GAAGZ,KAAK,CAACG,MAAM;IACjDG,MAAM,CAACJ,KAAK,GAAGhB,IAAI,CAACgB,KAAK;IACzBI,MAAM,CAACH,MAAM,GAAGjB,IAAI,CAACiB,MAAM;IAC3B,MAAMU,GAAG,GAAGP,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IAEnCD,GAAG,CAACE,SAAS,CACXf,KAAK,EACLd,IAAI,CAAC8B,CAAC,GAAGP,MAAM,EACfvB,IAAI,CAAC+B,CAAC,GAAGN,MAAM,EACfzB,IAAI,CAACgB,KAAK,GAAGO,MAAM,EACnBvB,IAAI,CAACiB,MAAM,GAAGQ,MAAM,EACpB,CAAC,EACD,CAAC,EACDzB,IAAI,CAACgB,KAAK,EACVhB,IAAI,CAACiB,MAAM,CACZ;IAED,OAAO,IAAIe,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCd,MAAM,CAACe,MAAM,CAACC,IAAI,IAAI;QACpB,IAAI,CAACA,IAAI,EAAE;UACTC,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAAC;UAChC;QACF;QACAF,IAAI,CAACG,IAAI,GAAGpB,QAAQ;QACpBc,OAAO,CAACG,IAAI,CAAC;MACf,CAAC,EAAE,YAAY,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACpC,gBAAgB,EAAE;MACrBnB,OAAO,CAACqD,KAAK,CAAC,YAAY,CAAC;MAC3B;IACF;IAEA,MAAMG,GAAG,GAAG,IAAIlD,KAAK,EAAE;IACvBkD,GAAG,CAACjC,IAAI,CAAE,GAAEkC,IAAI,CAACC,GAAG,EAAG,OAAM,EAAEvC,gBAAgB,CAAC;IAChD,MAAMwC,OAAO,GAAG,MAAMH,GAAG,CAACI,aAAa,CAAC;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;IACzD;;IAEA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAGD,MAAMC,YAAY,gBAChBtD,OAAA;IAAAuD,QAAA,eACEvD,OAAA,CAACP,MAAM,CAAC+D,OAAO;MAACC,MAAM,EAAC,SAAS;MAACC,cAAc,EAAE,KAAM;MAACC,QAAQ,EAAE9C,YAAa;MAAA0C,QAAA,gBAC7EvD,OAAA;QAAG4D,SAAS,EAAC,sBAAsB;QAAAL,QAAA,eACjCvD,OAAA,CAACL,aAAa;UAAA+B,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAArC,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf,eACJ/D,OAAA;QAAAuD,QAAA,EAAG;MAAe;QAAA7B,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAArC,QAAA,EAAAmC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACP;IAAArC,QAAA,EAAAmC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEpB;EAED,oBACE/D,OAAA;IAAK4D,SAAS,EAAC,sBAAsB;IAAAL,QAAA,GAClCD,YAAY,EACZnD,QAAQ,iBACPH,OAAA,CAACH,SAAS;MACRmE,GAAG,EAAE7D,QAAS;MACdI,IAAI,EAAEA,IAAK;MACX0D,YAAY;MACZ7C,aAAa,EAAEA,aAAc;MAC7B8C,UAAU,EAAE5C,cAAe;MAC3BqC,QAAQ,EAAEQ,OAAO,IAAI3D,OAAO,CAAC2D,OAAO;IAAE;MAAAzC,QAAA,EAAAmC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEzC,EACApD,gBAAgB,iBACfX,OAAA;MAAAuD,QAAA,eACEvD,OAAA;QAAKoE,GAAG,EAAC,cAAc;QAACJ,GAAG,EAAE/C,GAAG,CAACC,eAAe,CAACP,gBAAgB;MAAE;QAAAe,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAArC,QAAA,EAAAmC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEzE,eAED/D,OAAA,CAACT,MAAM;MAAC8E,OAAO,EAAEtB,YAAa;MAACM,IAAI,EAAC,SAAS;MAAAE,QAAA,EAAC;IAE9C;MAAA7B,QAAA,EAAAmC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAArC,QAAA,EAAAmC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAAC7D,EAAA,CAlHID,IAAI;AAAAqE,EAAA,GAAJrE,IAAI;AAoHV,eAAeA,IAAI;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}