{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94272\\\\Desktop\\\\Job\\\\my-personal_website\\\\beattather\\\\src\\\\pages\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\nimport './index.scss';\nimport { Button, Card, Form, Input, message, Modal, Space } from 'antd';\nimport { useStore } from '@/store';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [form] = Form.useForm();\n  //const {loginStore} = useStore()\n  const {\n    keyStore\n  } = useStore();\n  const navigate = useNavigate();\n  const hasApiKey = !!keyStore.apiKey;\n  const {\n    t\n  } = useTranslation(['file1', 'file2', 'file3']);\n  const apiKeyLabel = hasApiKey ? t(\"file1.新OpenAIkey\") : t(\"file1.OpenAIKey\");\n  const apiKeyPlaceholder = hasApiKey ? t(\"file1.请输入新的openAIkey\") : t(\"file1.请输入你的openAIkey\");\n  const handleSubmit = async values => {\n    const apiKey = values.title;\n    if (!apiKey) {\n      return message.error(t(\"file1.请输入你的openAIkey\"));\n    }\n\n    // 验证Key是否有效\n    try {\n      const response = await fetch('https://api.openai.com/v1/engines/text-davinci-003/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt: '测试 API Key...',\n          max_tokens: 5\n        })\n      });\n      if (response.status === 200) {\n        navigate('/');\n        message.success('API Key 验证成功！');\n        // Save the validated API key in the KeyStore\n        console.log(apiKey);\n        keyStore.setApiKey(apiKey);\n        console.log(keyStore.apiKey);\n      } else if (response.status === 401) {\n        message.error('API Key 无效，请重试。');\n      } else {\n        message.error('验证 API Key 时发生错误，请稍后再试。');\n      }\n    } catch (error) {\n      message.error('发生错误，请检查网络连接并稍后再试。');\n    }\n  };\n\n  // Add these lines for the OpenAI Key explanation modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        initialValues: {\n          title: ''\n        },\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"company_name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: apiKeyLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"verify_key\",\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: t(\"file1.验证Key\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"HhgImka68Ygxf9E6KVvRL/xJ5jo=\", false, function () {\n  return [Form.useForm, useStore, useNavigate, useTranslation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Card","Form","Input","message","Modal","Space","useStore","useNavigate","useState","useTranslation","jsxDEV","_jsxDEV","Login","_s","form","useForm","keyStore","navigate","hasApiKey","apiKey","t","apiKeyLabel","apiKeyPlaceholder","handleSubmit","values","title","error","response","fetch","method","headers","body","JSON","stringify","prompt","max_tokens","status","success","console","log","setApiKey","isModalOpen","setIsModalOpen","showModal","handleOk","handleCancel","className","children","initialValues","onFinish","Item","fileName","_jsxFileName","lineNumber","columnNumber","label","type","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/94272/Desktop/Job/my-personal_website/beattather/src/pages/Login/index.js"],"sourcesContent":["import './index.scss';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  Space,\r\n} from 'antd';\r\nimport { useStore } from '@/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction Login() {\r\n  const [form] = Form.useForm();\r\n  //const {loginStore} = useStore()\r\n  const { keyStore } = useStore();\r\n  const navigate = useNavigate();\r\n\r\n  const hasApiKey = !!keyStore.apiKey;\r\n  \r\n  const { t } = useTranslation(['file1', 'file2', 'file3']);\r\n\r\n  const apiKeyLabel = hasApiKey ? t(\"file1.新OpenAIkey\") : t(\"file1.OpenAIKey\");\r\n  const apiKeyPlaceholder = hasApiKey\r\n    ? t(\"file1.请输入新的openAIkey\")\r\n    : t(\"file1.请输入你的openAIkey\");\r\n\r\n  const handleSubmit = async (values) => {\r\n    const apiKey = values.title;\r\n\r\n    if (!apiKey) {\r\n      return message.error(t(\"file1.请输入你的openAIkey\"));\r\n    }\r\n\r\n    // 验证Key是否有效\r\n    try {\r\n      const response = await fetch('https://api.openai.com/v1/engines/text-davinci-003/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${apiKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          prompt: '测试 API Key...',\r\n          max_tokens: 5,\r\n        }),\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        navigate('/')\r\n        message.success('API Key 验证成功！');\r\n        // Save the validated API key in the KeyStore\r\n        console.log(apiKey);\r\n        keyStore.setApiKey(apiKey);\r\n        \r\n        console.log(keyStore.apiKey);\r\n      } else if (response.status === 401) {\r\n        message.error('API Key 无效，请重试。');\r\n      } else {\r\n        message.error('验证 API Key 时发生错误，请稍后再试。');\r\n      }\r\n    } catch (error) {\r\n      message.error('发生错误，请检查网络连接并稍后再试。');\r\n    }\r\n  };\r\n\r\n  // Add these lines for the OpenAI Key explanation modal\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <Card className=\"login-container\">\r\n        <Form form={form} initialValues={{ title: '' }} onFinish={handleSubmit}>\r\n          <Form.Item>\r\n            <div className=\"company_name\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item label={apiKeyLabel}>\r\n            {/*...*/}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              className=\"verify_key\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n            >\r\n              {t(\"file1.验证Key\")}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}