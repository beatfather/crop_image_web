{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94272\\\\Desktop\\\\Job\\\\my-personal_website\\\\Roundblock_Takehome\\\\Roundblock_Takehome_front\\\\src\\\\pages\\\\Home\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateDownload(canvas, crop) {\n  if (!crop || !canvas) {\n    return;\n  }\n  canvas.toBlob(blob => {\n    const previewUrl = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    anchor.download = 'cropPreview.png';\n    anchor.href = URL.createObjectURL(blob);\n    anchor.click();\n    window.URL.revokeObjectURL(previewUrl);\n  }, 'image/png', 1);\n}\nfunction setCanvasImage(image, canvas, crop) {\n  if (!crop || !canvas || !image) {\n    return;\n  }\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  const ctx = canvas.getContext('2d');\n  // refer https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio\n  const pixelRatio = window.devicePixelRatio;\n  canvas.width = crop.width * pixelRatio * scaleX;\n  canvas.height = crop.height * pixelRatio * scaleY;\n\n  // refer https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\n  ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n  ctx.imageSmoothingQuality = 'high';\n\n  // refer https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\n  ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width * scaleX, crop.height * scaleY);\n}\nexport default function App() {\n  _s();\n  var _completedCrop$width, _completedCrop$height;\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({\n    unit: 'px',\n    width: 30,\n    aspect: 1\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  console.log(crop);\n\n  // on selecting file we set load the image on to cropper\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n  useEffect(() => {\n    setCanvasImage(imgRef.current, previewCanvasRef.current, completedCrop);\n  }, [completedCrop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: onSelectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: upImg,\n      onImageLoaded: onLoad,\n      crop: crop,\n      onChange: c => setCrop(c),\n      onComplete: c => setCompletedCrop(c),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: previewCanvasRef\n        // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n        ,\n        style: {\n          width: Math.round((_completedCrop$width = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.width) !== null && _completedCrop$width !== void 0 ? _completedCrop$width : 0),\n          height: Math.round((_completedCrop$height = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.height) !== null && _completedCrop$height !== void 0 ? _completedCrop$height : 0)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Note that the download below won't work in this sandbox due to the iframe missing 'allow-downloads'. It's just for your reference.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: !(completedCrop !== null && completedCrop !== void 0 && completedCrop.width) || !(completedCrop !== null && completedCrop !== void 0 && completedCrop.height),\n      onClick: () => generateDownload(previewCanvasRef.current, completedCrop),\n      children: \"Download cropped image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mwoM0mKH4eSzARInWH7tJN+CDNU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","ReactCrop","jsxDEV","_jsxDEV","generateDownload","canvas","crop","toBlob","blob","previewUrl","window","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","setCanvasImage","image","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","App","_s","_completedCrop$width","_completedCrop$height","upImg","setUpImg","imgRef","previewCanvasRef","setCrop","unit","aspect","completedCrop","setCompletedCrop","console","log","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","onLoad","img","current","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","onImageLoaded","c","onComplete","ref","style","Math","round","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/94272/Desktop/Job/my-personal_website/Roundblock_Takehome/Roundblock_Takehome_front/src/pages/Home/index.js"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n\r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n\r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/png',\r\n    1\r\n  );\r\n}\r\n\r\nfunction setCanvasImage(image, canvas, crop) {\r\n  if (!crop || !canvas || !image) {\r\n    return;\r\n  }\r\n\r\n  const scaleX = image.naturalWidth / image.width;\r\n  const scaleY = image.naturalHeight / image.height;\r\n  const ctx = canvas.getContext('2d');\r\n  // refer https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio\r\n  const pixelRatio = window.devicePixelRatio;\r\n\r\n  canvas.width = crop.width * pixelRatio * scaleX;\r\n  canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n  // refer https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\r\n  ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n  ctx.imageSmoothingQuality = 'high';\r\n\r\n  // refer https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\r\n  ctx.drawImage(\r\n    image,\r\n    crop.x * scaleX,\r\n    crop.y * scaleY,\r\n    crop.width * scaleX,\r\n    crop.height * scaleY,\r\n    0,\r\n    0,\r\n    crop.width * scaleX,\r\n    crop.height * scaleY\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [upImg, setUpImg] = useState();\r\n\r\n  const imgRef = useRef(null);\r\n  const previewCanvasRef = useRef(null);\r\n\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 30, aspect: 1 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n\r\n  console.log(crop);\r\n\r\n  // on selecting file we set load the image on to cropper\r\n  const onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => setUpImg(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onLoad = useCallback((img) => {\r\n    imgRef.current = img;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCanvasImage(imgRef.current, previewCanvasRef.current, completedCrop);\r\n  }, [completedCrop]);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div>\r\n        <input type='file' accept='image/*' onChange={onSelectFile} />\r\n      </div>\r\n      <ReactCrop\r\n        src={upImg}\r\n        onImageLoaded={onLoad}\r\n        crop={crop}\r\n        onChange={(c) => setCrop(c)}\r\n        onComplete={(c) => setCompletedCrop(c)}\r\n      >\r\n        <img src={src} />\r\n      </ReactCrop>\r\n      <div>\r\n        {/* Canvas to display cropped image */}\r\n        <canvas\r\n          ref={previewCanvasRef}\r\n          // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n          style={{\r\n            width: Math.round(completedCrop?.width ?? 0),\r\n            height: Math.round(completedCrop?.height ?? 0),\r\n          }}\r\n        />\r\n      </div>\r\n      <p>\r\n        Note that the download below won't work in this sandbox due to the\r\n        iframe missing 'allow-downloads'. It's just for your reference.\r\n      </p>\r\n      <button\r\n        type='button'\r\n        disabled={!completedCrop?.width || !completedCrop?.height}\r\n        onClick={() =>\r\n          generateDownload(previewCanvasRef.current, completedCrop)\r\n        }\r\n      >\r\n        Download cropped image\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}