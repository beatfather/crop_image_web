{"ast":null,"code":"// audioUtils.js\nimport { message } from 'antd';\nimport { Configuration, OpenAIApi } from 'openai';\nimport FormData from 'form-data';\nclass CustomFormData extends FormData {\n  getHeaders() {\n    return {};\n  }\n}\nconst handleAudioUpload = async file => {\n  const isAudio = file.type.startsWith('audio');\n  const maxFileSize = 25 * 1024 * 1024; // 25 MB\n\n  if (isAudio && audioList.length < 1 && file.size <= maxFileSize) {\n    return true;\n  }\n\n  // 如果文件不是音频格式\n  else if (!isAudio) {\n    message.error(t('upload.TypeError'));\n    return false;\n  }\n\n  // 如果已经上传了一个文件\n  else if (audioList.length > 0) {\n    message.warning(t('upload.NumError'));\n    return false;\n  }\n\n  // 如果文件大小超过限制\n  else if (file.size > maxFileSize) {\n    message.error(t('upload.SizeError'));\n    return false;\n  }\n};\nexport { handleAudioUpload };","map":{"version":3,"names":["message","Configuration","OpenAIApi","FormData","CustomFormData","getHeaders","handleAudioUpload","file","isAudio","type","startsWith","maxFileSize","audioList","length","size","error","t","warning"],"sources":["C:/Users/94272/Desktop/Job/my-personal_website/beattather/src/utils/processAudio.js"],"sourcesContent":["// audioUtils.js\r\nimport { message } from 'antd';\r\n\r\nimport { Configuration, OpenAIApi } from 'openai';\r\nimport FormData from 'form-data';\r\n\r\nclass CustomFormData extends FormData {\r\n  getHeaders() {\r\n    return {};\r\n  }\r\n}\r\n\r\nconst handleAudioUpload = async (file) => {\r\n    const isAudio = file.type.startsWith('audio');\r\n    const maxFileSize = 25 * 1024 * 1024; // 25 MB\r\n\r\n    if (isAudio && audioList.length < 1 && file.size <= maxFileSize) {\r\n      return true;\r\n    }\r\n\r\n    // 如果文件不是音频格式\r\n    else if (!isAudio) {\r\n      message.error(t('upload.TypeError'));\r\n      return false;\r\n    }\r\n\r\n    // 如果已经上传了一个文件\r\n    else if (audioList.length > 0) {\r\n      message.warning(t('upload.NumError'));\r\n      return false;\r\n    }\r\n    \r\n    // 如果文件大小超过限制\r\n    else if (file.size > maxFileSize) {\r\n      message.error(t('upload.SizeError'));\r\n      return false;\r\n    }\r\n};\r\n\r\nexport { handleAudioUpload };\r\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,MAAM;AAE9B,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,OAAOC,QAAQ,MAAM,WAAW;AAEhC,MAAMC,cAAc,SAASD,QAAQ,CAAC;EACpCE,UAAUA,CAAA,EAAG;IACX,OAAO,CAAC,CAAC;EACX;AACF;AAEA,MAAMC,iBAAiB,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC;EAC7C,MAAMC,WAAW,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;;EAEtC,IAAIH,OAAO,IAAII,SAAS,CAACC,MAAM,GAAG,CAAC,IAAIN,IAAI,CAACO,IAAI,IAAIH,WAAW,EAAE;IAC/D,OAAO,IAAI;EACb;;EAEA;EAAA,KACK,IAAI,CAACH,OAAO,EAAE;IACjBR,OAAO,CAACe,KAAK,CAACC,CAAC,CAAC,kBAAkB,CAAC,CAAC;IACpC,OAAO,KAAK;EACd;;EAEA;EAAA,KACK,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IAC7Bb,OAAO,CAACiB,OAAO,CAACD,CAAC,CAAC,iBAAiB,CAAC,CAAC;IACrC,OAAO,KAAK;EACd;;EAEA;EAAA,KACK,IAAIT,IAAI,CAACO,IAAI,GAAGH,WAAW,EAAE;IAChCX,OAAO,CAACe,KAAK,CAACC,CAAC,CAAC,kBAAkB,CAAC,CAAC;IACpC,OAAO,KAAK;EACd;AACJ,CAAC;AAED,SAASV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}