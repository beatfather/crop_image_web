{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94272\\\\Desktop\\\\Job\\\\my-personal_website\\\\beattather\\\\src\\\\pages\\\\NoteHelper\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Breadcrumb, Form, Input, Upload, Button, message, Typography, Progress, Space, Checkbox, Row, Drawer, Radio } from 'antd';\nimport { PlusOutlined, SettingOutlined } from '@ant-design/icons';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useStore } from '@/store';\nimport FormData from 'form-data';\nimport './index.scss';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require('openai');\nconst {\n  Title,\n  Paragraph\n} = Typography;\nclass CustomFormData extends FormData {\n  getHeaders() {\n    return {};\n  }\n}\nconst NoteHelper = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    keyStore\n  } = useStore();\n  const [response, setResponse] = useState('');\n  const [audioList, setAudioList] = useState([]);\n  const [progressPercent, setProgressPercent] = useState(0);\n  const [preferences, setPreferences] = useState([]);\n  const [customContent, setCustomContent] = useState('');\n  const [advancedOptionsVisible, setAdvancedOptionsVisible] = useState(false);\n  const [selectedModel, setSelectedModel] = useState('gpt-3.5-turbo');\n  const estimateTokenCount = text => {\n    const CHINESE_CHARACTER_REGEX = /[\\u4e00-\\u9fff]/;\n\n    // 计算英文单词数量\n    const wordCount = text.split(/\\s+/).filter(word => !CHINESE_CHARACTER_REGEX.test(word)).length;\n\n    // 计算中文字符数量\n    const chineseCharacterCount = Array.from(text).reduce((count, char) => {\n      if (CHINESE_CHARACTER_REGEX.test(char)) {\n        count += 2;\n      }\n      return count;\n    }, 0);\n    return wordCount + chineseCharacterCount;\n  };\n\n  // 打开/关闭抽屉\n  const toggleAdvancedOptions = () => {\n    setAdvancedOptionsVisible(!advancedOptionsVisible);\n  };\n  const onModelChange = e => {\n    setSelectedModel(e.target.value);\n  };\n  const callOpenAICompletionAPI = async _ref => {\n    let {\n      title,\n      formType,\n      content,\n      remarks\n    } = _ref;\n    setProgressPercent(33);\n    const configuration = new Configuration({\n      organization: 'org-9QcLes4mblKdTtxRSBBYJTCd',\n      apiKey: keyStore.apiKey,\n      formDataCtor: CustomFormData\n    });\n    delete configuration.baseOptions.headers['User-Agent'];\n    const openai = new OpenAIApi(configuration);\n    let audio_text = '';\n    const preferredOutput = preferences.includes(t('noteHelper.preferencesOptions.custom')) ? preferences.join(', ') + ': ' + customContent : preferences.join(', ');\n    if (audioList.length > 0) {\n      const audioFile = audioList[0].originFileObj;\n      const formData = new FormData();\n      formData.append('file', audioFile, audioFile.name);\n      const audioTranscription = await openai.createTranscription(audioFile, 'whisper-1');\n      audio_text = audioTranscription.data.text;\n    } else if (!content) {\n      message.error('请至少输入文本内容或上传音频文件！');\n      return;\n    }\n    setProgressPercent(66);\n    let prompt = '';\n    if (title) {\n      prompt += `${t('noteHelper.prompt.title')}: ${title}\\n`;\n    }\n    if (formType) {\n      prompt += `${t('noteHelper.prompt.formType')}: ${formType}\\n`;\n    }\n    if (content) {\n      prompt += `${t('noteHelper.prompt.content')}: ${content}\\n`;\n    }\n    if (audio_text) {\n      prompt += `${t('noteHelper.prompt.audioText')}: ${audio_text}\\n`;\n    }\n    if (preferredOutput) {\n      prompt += `${t('noteHelper.prompt.preferences')}: ${preferredOutput}\\n`;\n    }\n    if (remarks) {\n      prompt += `${t('noteHelper.prompt.remarks')}: ${remarks}\\n`;\n    }\n    prompt += `${t('noteHelper.prompt.sayLng')}`;\n    console.log(prompt);\n    const promptTokenCount = estimateTokenCount(prompt);\n    const maxTokens = 3700 - promptTokenCount;\n    console.log(maxTokens);\n    /*\r\n    //for text-davinci-003\r\n    const getResponse = await openai.createCompletion({\r\n      model: 'text-davinci-003',\r\n      prompt,\r\n      temperature: 0.5,\r\n      max_tokens: maxTokens,\r\n      top_p: 1.0,\r\n      frequency_penalty: 0.0,\r\n      presence_penalty: 0.0,\r\n    });\r\n    */\n    const getResponse = await openai.createChatCompletion({\n      model: selectedModel,\n      messages: [{\n        role: \"user\",\n        content: prompt\n      }],\n      temperature: 0.5,\n      top_p: 0.5\n    });\n    /*\r\n    const getResponse = await openai.createChatCompletion({\r\n      model: \"gpt-4\",\r\n      messages: [{role: \"user\", content: prompt},\r\n    ],\r\n    \r\n    temperature: 0.5,\r\n    top_p: 0.5,\r\n    });\r\n    */\n    setResponse(getResponse.data.choices[0].message.content);\n    //setResponse(getResponse.data.choices[0].text); //for text-davinci-003\n    setProgressPercent(100);\n  };\n  const handleSubmit = values => {\n    const {\n      title,\n      formType,\n      content,\n      remarks\n    } = values;\n    callOpenAICompletionAPI({\n      title,\n      formType,\n      content,\n      remarks\n    });\n  };\n  const handleUpload = async file => {\n    const isAudio = file.type.startsWith('audio');\n    if (!isAudio) {\n      message.error('请上传音频文件！');\n      return Upload.LIST_IGNORE;\n    }\n    return true;\n  };\n  const onChangePreferences = checkedValues => {\n    setPreferences(checkedValues);\n  };\n  const onCustomContentChange = e => {\n    setCustomContent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        separator: \">\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: t('noteHelper.breadcrumb.home')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: t('noteHelper.breadcrumb.noteAssistant')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          className: \"progress_circle\",\n          type: \"circle\",\n          percent: progressPercent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            children: t('noteHelper.resultTitle')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: response ? response.replace(/\\n/g, '<br/>') : ''\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        initialValues: {\n          title: '',\n          formType: '',\n          content: ''\n        },\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.title'),\n          name: \"title\",\n          rules: [{\n            required: false,\n            message: t('noteHelper.titlePlaceholder')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: t('noteHelper.titlePlaceholder'),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.formType'),\n          name: \"formType\",\n          rules: [{\n            required: false,\n            message: t('noteHelper.formTypePlaceholder')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: t('noteHelper.formTypePlaceholder'),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.uploadAudio'),\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            name: \"audio\",\n            listType: \"picture-card\",\n            className: \"avatar-uploader\",\n            showUploadList: true,\n            fileList: audioList,\n            beforeUpload: handleUpload,\n            onPreview: () => {},\n            onChange: _ref2 => {\n              let {\n                fileList\n              } = _ref2;\n              return setAudioList(fileList);\n            },\n            children: audioList.length >= 1 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8\n              },\n              children: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.outputPreferences'),\n          children: [/*#__PURE__*/_jsxDEV(Checkbox.Group, {\n            onChange: onChangePreferences,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                value: t('noteHelper.preferencesOptions.summary'),\n                children: t('noteHelper.preferencesOptions.summary')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: t('noteHelper.preferencesOptions.outline'),\n                children: t('noteHelper.preferencesOptions.outline')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: t('noteHelper.preferencesOptions.custom'),\n                children: t('noteHelper.preferencesOptions.custom')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), preferences.includes(t('noteHelper.preferencesOptions.custom')) && /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u81EA\\u5B9A\\u4E49\\u5185\\u5BB9\",\n            style: {\n              width: '100%',\n              marginTop: 8\n            },\n            value: customContent,\n            onChange: onCustomContentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.textContent'),\n          name: \"content\",\n          rules: [{\n            required: false,\n            message: t('noteHelper.contentRulesMessage')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            rows: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: t('noteHelper.formLabel.remarks'),\n          name: \"remarks\",\n          rules: [{\n            required: false,\n            message: t('noteHelper.remarksPlaceholder')\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: t('noteHelper.remarksPlaceholder'),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"summary\",\n            size: \"large\",\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: t('noteHelper.summarizeButton')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteHelper, \"eduVaH5lNRBLKWJ3vWyIVlDTsyY=\", false, function () {\n  return [useTranslation, useStore];\n});\n_c = NoteHelper;\nexport default NoteHelper;\nvar _c;\n$RefreshReg$(_c, \"NoteHelper\");","map":{"version":3,"names":["React","useState","Card","Breadcrumb","Form","Input","Upload","Button","message","Typography","Progress","Space","Checkbox","Row","Drawer","Radio","PlusOutlined","SettingOutlined","v4","uuidv4","useStore","FormData","useTranslation","jsxDEV","_jsxDEV","Configuration","OpenAIApi","require","Title","Paragraph","CustomFormData","getHeaders","NoteHelper","_s","t","keyStore","response","setResponse","audioList","setAudioList","progressPercent","setProgressPercent","preferences","setPreferences","customContent","setCustomContent","advancedOptionsVisible","setAdvancedOptionsVisible","selectedModel","setSelectedModel","estimateTokenCount","text","CHINESE_CHARACTER_REGEX","wordCount","split","filter","word","test","length","chineseCharacterCount","Array","from","reduce","count","char","toggleAdvancedOptions","onModelChange","e","target","value","callOpenAICompletionAPI","_ref","title","formType","content","remarks","configuration","organization","apiKey","formDataCtor","baseOptions","headers","openai","audio_text","preferredOutput","includes","join","audioFile","originFileObj","formData","append","name","audioTranscription","createTranscription","data","error","prompt","console","log","promptTokenCount","maxTokens","getResponse","createChatCompletion","model","messages","role","temperature","top_p","choices","handleSubmit","values","handleUpload","file","isAudio","type","startsWith","LIST_IGNORE","onChangePreferences","checkedValues","onCustomContentChange","children","separator","Item","href","fileName","_jsxFileName","lineNumber","columnNumber","className","percent","level","dangerouslySetInnerHTML","__html","replace","initialValues","onFinish","label","rules","required","placeholder","style","width","listType","showUploadList","fileList","beforeUpload","onPreview","onChange","_ref2","marginTop","Group","TextArea","rows","size","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/94272/Desktop/Job/my-personal_website/beattather/src/pages/NoteHelper/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  Breadcrumb,\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  message,\r\n  Typography,\r\n  Progress,\r\n  Space,\r\n  Checkbox,\r\n  Row,\r\n  Drawer,\r\n  Radio,\r\n} from 'antd';\r\nimport { PlusOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useStore } from '@/store';\r\nimport FormData from 'form-data';\r\nimport './index.scss';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst { Configuration, OpenAIApi } = require('openai');\r\nconst { Title, Paragraph } = Typography;\r\n\r\nclass CustomFormData extends FormData {\r\n  getHeaders() {\r\n    return {};\r\n  }\r\n}\r\n\r\nconst NoteHelper = () => {\r\n  const { t } = useTranslation();\r\n  const { keyStore } = useStore();\r\n  const [response, setResponse] = useState('');\r\n  const [audioList, setAudioList] = useState([]);\r\n  const [progressPercent, setProgressPercent] = useState(0);\r\n  const [preferences, setPreferences] = useState([]);\r\n  const [customContent, setCustomContent] = useState('');\r\n  const [advancedOptionsVisible, setAdvancedOptionsVisible] = useState(false);\r\n  const [selectedModel, setSelectedModel] = useState('gpt-3.5-turbo');\r\n  const estimateTokenCount = (text) => {\r\n    const CHINESE_CHARACTER_REGEX = /[\\u4e00-\\u9fff]/;\r\n  \r\n    // 计算英文单词数量\r\n    const wordCount = text.split(/\\s+/)\r\n      .filter(word => !CHINESE_CHARACTER_REGEX.test(word))\r\n      .length;\r\n  \r\n    // 计算中文字符数量\r\n    const chineseCharacterCount = Array.from(text).reduce((count, char) => {\r\n      if (CHINESE_CHARACTER_REGEX.test(char)) {\r\n        count += 2;\r\n      }\r\n      return count;\r\n    }, 0);\r\n    return wordCount + chineseCharacterCount;\r\n    };\r\n  \r\n  // 打开/关闭抽屉\r\n  const toggleAdvancedOptions = () => {\r\n    setAdvancedOptionsVisible(!advancedOptionsVisible);\r\n  };\r\n\r\n  const onModelChange = (e) => {\r\n    setSelectedModel(e.target.value);\r\n  };\r\n  const callOpenAICompletionAPI = async ({ title, formType, content, remarks}) => {\r\n    setProgressPercent(33);\r\n    const configuration = new Configuration({\r\n      organization: 'org-9QcLes4mblKdTtxRSBBYJTCd',\r\n      apiKey: keyStore.apiKey,\r\n      formDataCtor: CustomFormData,\r\n    });\r\n    \r\n    delete configuration.baseOptions.headers['User-Agent'];\r\n    const openai = new OpenAIApi(configuration);\r\n    \r\n    let audio_text = '';\r\n    const preferredOutput = preferences.includes(t('noteHelper.preferencesOptions.custom'))\r\n      ? preferences.join(', ') + ': ' + customContent\r\n      : preferences.join(', ');\r\n    \r\n    if (audioList.length > 0) {\r\n      const audioFile = audioList[0].originFileObj;\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', audioFile, audioFile.name);\r\n\r\n      const audioTranscription = await openai.createTranscription(audioFile, 'whisper-1');\r\n      audio_text = audioTranscription.data.text;\r\n    }else if(!content)\r\n    {\r\n      message.error('请至少输入文本内容或上传音频文件！');\r\n      return;\r\n    }\r\n    setProgressPercent(66);\r\n    let prompt = '';\r\n    if (title) {\r\n      prompt += `${t('noteHelper.prompt.title')}: ${title}\\n`;\r\n    }\r\n    \r\n    if (formType) {\r\n      prompt += `${t('noteHelper.prompt.formType')}: ${formType}\\n`;\r\n    }\r\n    \r\n    if (content) {\r\n      prompt += `${t('noteHelper.prompt.content')}: ${content}\\n`;\r\n    }\r\n\r\n    if (audio_text) {\r\n      prompt += `${t('noteHelper.prompt.audioText')}: ${audio_text}\\n`;\r\n    }\r\n\r\n    if (preferredOutput) {\r\n      prompt += `${t('noteHelper.prompt.preferences')}: ${preferredOutput}\\n`;\r\n    }\r\n    if (remarks) {\r\n      prompt += `${t('noteHelper.prompt.remarks')}: ${remarks}\\n`;\r\n    }\r\n    prompt += `${t('noteHelper.prompt.sayLng')}`\r\n    console.log(prompt);\r\n    const promptTokenCount = estimateTokenCount(prompt);\r\n    const maxTokens = 3700 - promptTokenCount;\r\n    console.log(maxTokens);\r\n    /*\r\n    //for text-davinci-003\r\n    const getResponse = await openai.createCompletion({\r\n      model: 'text-davinci-003',\r\n      prompt,\r\n      temperature: 0.5,\r\n      max_tokens: maxTokens,\r\n      top_p: 1.0,\r\n      frequency_penalty: 0.0,\r\n      presence_penalty: 0.0,\r\n    });\r\n    */\r\n    const getResponse = await openai.createChatCompletion({\r\n      model: selectedModel,\r\n      messages: [{role: \"user\", content: prompt}],\r\n      temperature: 0.5,\r\n      top_p: 0.5,\r\n    });\r\n    /*\r\n    const getResponse = await openai.createChatCompletion({\r\n      model: \"gpt-4\",\r\n      messages: [{role: \"user\", content: prompt},\r\n    ],\r\n    \r\n    temperature: 0.5,\r\n    top_p: 0.5,\r\n    });\r\n    */\r\n    setResponse(getResponse.data.choices[0].message.content);\r\n    //setResponse(getResponse.data.choices[0].text); //for text-davinci-003\r\n    setProgressPercent(100);\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    const { title, formType, content, remarks } = values;\r\n\r\n    callOpenAICompletionAPI({ title, formType, content, remarks});\r\n  };\r\n\r\n  const handleUpload = async (file) => {\r\n    const isAudio = file.type.startsWith('audio');\r\n\r\n    if (!isAudio) {\r\n      message.error('请上传音频文件！');\r\n      return Upload.LIST_IGNORE;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onChangePreferences = (checkedValues) => {\r\n    setPreferences(checkedValues);\r\n  };\r\n  const onCustomContentChange = (e) => {\r\n    setCustomContent(e.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card\r\n        title={\r\n          <Breadcrumb separator=\">\">\r\n            <Breadcrumb.Item>\r\n              <a href=\"#\">{t('noteHelper.breadcrumb.home')}</a>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>{t('noteHelper.breadcrumb.noteAssistant')}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        }\r\n      >\r\n        <Space>\r\n          <Progress className=\"progress_circle\" type=\"circle\" percent={progressPercent} />\r\n          <div>\r\n            <Title level={3}>{t('noteHelper.resultTitle')}</Title>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: response ? response.replace(/\\n/g, '<br/>') : '',\r\n              }}\r\n            ></div>\r\n          </div>\r\n          \r\n        </Space>\r\n      </Card>\r\n      <Card>\r\n        <Form initialValues={{ title: '', formType: '', content: '' }} onFinish={handleSubmit}>\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.title')}\r\n            name=\"title\"\r\n            rules={[{ required: false, message: t('noteHelper.titlePlaceholder') }]}\r\n          >\r\n            <Input placeholder={t('noteHelper.titlePlaceholder')} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.formType')}\r\n            name=\"formType\"\r\n            rules={[{ required: false, message: t('noteHelper.formTypePlaceholder') }]}\r\n          >\r\n            <Input placeholder={t('noteHelper.formTypePlaceholder')} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n\r\n          <Form.Item label={t('noteHelper.formLabel.uploadAudio')}>\r\n            <Upload\r\n              name=\"audio\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader\"\r\n              showUploadList\r\n              fileList={audioList}\r\n              beforeUpload={handleUpload}\r\n              onPreview={() => {}}\r\n              onChange={({ fileList }) => setAudioList(fileList)}\r\n            >\r\n              {audioList.length >= 1 ? null : (\r\n                <div style={{ marginTop: 8 }}>\r\n                  <PlusOutlined />\r\n                </div>\r\n              )}\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          <Form.Item label={t('noteHelper.formLabel.outputPreferences')}>\r\n            <Checkbox.Group onChange={onChangePreferences}>\r\n              <Row>\r\n                <Checkbox value={t('noteHelper.preferencesOptions.summary')}>{t('noteHelper.preferencesOptions.summary')}</Checkbox>\r\n                <Checkbox value={t('noteHelper.preferencesOptions.outline')}>{t('noteHelper.preferencesOptions.outline')}</Checkbox>\r\n                <Checkbox value={t('noteHelper.preferencesOptions.custom')}>{t('noteHelper.preferencesOptions.custom')}</Checkbox>\r\n              </Row>\r\n            </Checkbox.Group>\r\n            {preferences.includes(t('noteHelper.preferencesOptions.custom')) && (\r\n              <Input\r\n                placeholder=\"请输入自定义内容\"\r\n                style={{ width: '100%', marginTop: 8 }}\r\n                value={customContent}\r\n                onChange={onCustomContentChange}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.textContent')}\r\n            name=\"content\"\r\n            rules={[{ required: false, message: t('noteHelper.contentRulesMessage') }]}\r\n          >\r\n            <Input.TextArea rows={10} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={t('noteHelper.formLabel.remarks')}\r\n            name=\"remarks\"\r\n            rules={[{ required: false, message: t('noteHelper.remarksPlaceholder') }]}\r\n          >\r\n            <Input placeholder={t('noteHelper.remarksPlaceholder')} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button className=\"summary\" size=\"large\" type=\"primary\" htmlType=\"submit\">\r\n              {t('noteHelper.summarizeButton')}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteHelper;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}