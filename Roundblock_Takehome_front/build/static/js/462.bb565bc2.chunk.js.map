{"version":3,"file":"static/js/462.bb565bc2.chunk.js","mappings":"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","sources":["pages/Home/index.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./index.scss\";\r\nimport { Card, Form, Button, message, Upload, Popover } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport { createZipFromImage } from \"@/utils\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [crop, setCrop] = useState({ aspect: 1, unit: \"%\" });\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const [src, setSrc] = useState(null);\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  const imageRef = useRef(null);\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n\r\n  const handleSubmit = async (info) => {\r\n    if (croppedImage === null) {\r\n      message.error(\"哎哟，你干嘛哎哟，请先完成裁剪啦\");\r\n      return;\r\n    }\r\n    try {\r\n      setIsUploading(true);\r\n      const zip = await createZipFromImage(croppedImage);\r\n  \r\n      const formData = new FormData();\r\n      formData.append(\"file\", zip, \"image.zip\");\r\n  \r\n      await uploadFileWithProgress(formData, (percentage) => {\r\n        setUploadPercentage(percentage);\r\n      });\r\n  \r\n      message.success(\"上传成功\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      message.error(\"上传失败，请重试\");\r\n    } finally {\r\n      setIsUploading(false);\r\n      setUploadPercentage(0);\r\n    }\r\n  };\r\n  \r\n\r\n  // 裁剪图片\r\n  const cropImageNow = () => {\r\n    const image_HTML = new Image();\r\n    image_HTML.src = src;\r\n\r\n    const canvas = document.createElement('canvas');\r\n    console.log(\"src\",src);\r\n    console.log(\"canvas\",canvas);\r\n    console.log(\"image\",image);\r\n    \r\n    const scaleX = image_HTML.naturalWidth / imageRef.current.clientWidth;\r\n    const scaleY = image_HTML.naturalHeight / imageRef.current.clientHeight;\r\n    console.log(\"scaleX\",scaleX)\r\n    console.log(\"image_HTML.naturalWidth\",image_HTML.naturalWidth)\r\n    console.log(\"image_HTML.width\",image_HTML.width)\r\n    console.log(\"scaleY\",scaleY)\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const pixelRatio = window.devicePixelRatio;\r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n    \r\n    console.log(\"crop\",crop)\r\n    \r\n    \r\n\r\n    console.log(\"image_HTML\",image_HTML);\r\n    ctx.drawImage(\r\n      image_HTML,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height,\r\n    );\r\n\r\n    // Converting to base64\r\n    const base64Image = canvas.toDataURL('image/jpeg');\r\n    setCroppedImage(base64Image);\r\n    console.log(\"base64Image\",base64Image);\r\n  };\r\n\r\n  // 本地上传之前检查图片\r\n  const checkLocalUpload = async (file) => {\r\n    if (!file || !file.type.startsWith('image/')) {\r\n      message.error('请选择一个图片文件。');\r\n      return false;\r\n    }\r\n  \r\n    // 检查是否已经有图片存在并且尚未提交到后端，要求用户确认是否放弃之前的更改\r\n    if (image !== null) {\r\n      const confirmResult = window.confirm('前一个图片尚未上传，您确定要放弃之前的编辑和更改吗？');\r\n      if (!confirmResult) {\r\n        return false;\r\n      }\r\n      setCroppedImage(null);  // 清空之前的图片\r\n      setCrop(null); // 清空之前的裁剪信息\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  // 本地上传\r\n  const handleBeforeUpload = async (file) => {\r\n    if (await checkLocalUpload(file)) {\r\n      setSrc(URL.createObjectURL(file));\r\n      setImage(file);\r\n      console.log(\"local upload success\");\r\n    } else {\r\n      console.log(\"local upload failed\", image);\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  // 上传到后端\r\n  const uploadFileWithProgress = (formData, onUploadProgress) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n  \r\n      xhr.open(\"POST\", \"http://54.180.149.62:8080/files/upload\");  // 服务器用\r\n      //xhr.open(\"POST\", \"http://localhost:8080/files/upload\"); // 本地测试用\r\n  \r\n      xhr.upload.onprogress = (event) => {\r\n        if (event.lengthComputable) {\r\n          const percentage = Math.round((event.loaded * 100) / event.total);\r\n          onUploadProgress(percentage);\r\n        }\r\n      };\r\n  \r\n      xhr.onload = (event) => {\r\n        if (xhr.status >= 200 && xhr.status < 300) {\r\n          resolve(xhr.responseText);\r\n        } else {\r\n          reject(new Error(\"Upload failed with status: \" + xhr.statusText));\r\n        }\r\n      };\r\n  \r\n      xhr.onerror = () => {\r\n        reject(new Error(\"Upload failed with status: \" + xhr.statusText));\r\n      };\r\n  \r\n      xhr.send(formData);\r\n    });\r\n  };\r\n  \r\n  // 下载最新的文件\r\n  const downloadLatestFile = async () => {\r\n    try {\r\n      \r\n      const response = await fetch('http://54.180.149.62:8080/files/download', {\r\n        method: 'GET',\r\n      });\r\n      \r\n      /*\r\n      const response = await fetch('http://localhost:8080/files/download', {\r\n        method: 'GET',\r\n      });\r\n      */\r\n      console.log(\"response\",response);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'example.zip'); // Use a dynamic name based on your requirements\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error(\"Downloading file failed:\", error);\r\n      message.error(\"下载失败，请重试\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"outer-container\">\r\n      <Card title=\"图片剪裁\" className=\"home-container\">\r\n        <Form layout=\"vertical\">\r\n          {image ? (\r\n            <>\r\n              <Card className=\"crop-container\">\r\n                <Form.Item label=\"裁剪图片\" className=\"image-center\">\r\n                  <ReactCrop src={src} onImageLoaded={setImage} crop={crop} onChange={(c) => setCrop(c)} onComplete={(c) => setCompletedCrop(c)}>\r\n                    <Form.Item >\r\n                      <img  className= \"image-center\" src={src} ref={imageRef}/>\r\n                    </Form.Item>\r\n                  </ReactCrop>\r\n\r\n                  <Form.Item>\r\n                    <Button className=\"submit-button\" onClick={cropImageNow}>\r\n                      裁剪\r\n                    </Button>\r\n                  </Form.Item>\r\n                  \r\n                </Form.Item>\r\n              </Card>\r\n              {croppedImage && (\r\n                <Card className=\"crop-container\">\r\n                  <Form.Item label=\"预览\" className=\"image-center\">\r\n                    <img src={croppedImage} alt=\"裁剪后的图片\" />\r\n                  </Form.Item>\r\n                </Card>\r\n              )}\r\n              \r\n            </>\r\n          ) : (\r\n            <p className=\"image-center\">请在下方上传图片</p>\r\n          )}\r\n  \r\n          <Form.Item label=\"上传图片\">\r\n            <Upload.Dragger\r\n              accept=\"image/*\"\r\n              showUploadList={false}\r\n              beforeUpload={handleBeforeUpload}\r\n              onRemove={(file) => {\r\n                console.log(\"onRemove\", file);\r\n                setSrc(null);\r\n                setImage(null);\r\n              }}\r\n            >\r\n              <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n              </p>\r\n              <p>点击这里或者拖拽图片到此处上传</p>\r\n            </Upload.Dragger>\r\n          </Form.Item>\r\n  \r\n          <Form.Item>\r\n            <Button className=\"submit-button\" onClick={handleSubmit} type=\"primary\">\r\n              上传图片\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button className=\"submit-button\" onClick={downloadLatestFile} type=\"primary\">\r\n              下载文件\r\n            </Button>\r\n          </Form.Item>\r\n          \r\n\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","image","setImage","_useState3","aspect","unit","_useState4","crop","setCrop","_useState5","_useState6","croppedImage","setCroppedImage","_useState7","_useState8","src","setSrc","_useState9","_useState10","setCompletedCrop","imageRef","useRef","_useState11","_useState12","setUploadPercentage","_useState13","_useState14","setIsUploading","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","info","zip","formData","wrap","_context","prev","next","message","abrupt","createZipFromImage","sent","FormData","append","uploadFileWithProgress","percentage","t0","console","error","finish","stop","_x","apply","arguments","checkLocalUpload","_ref2","_callee2","file","_context2","type","startsWith","window","confirm","_x2","handleBeforeUpload","_ref3","_callee3","_context3","URL","createObjectURL","log","_x3","onUploadProgress","Promise","resolve","reject","xhr","XMLHttpRequest","open","upload","onprogress","event","lengthComputable","Math","round","loaded","total","onload","status","responseText","Error","statusText","onerror","send","downloadLatestFile","_ref4","_callee4","response","blob","url","link","_context4","fetch","method","ok","concat","document","createElement","href","setAttribute","body","appendChild","click","removeChild","_jsx","className","children","Card","title","_jsxs","Form","layout","_Fragment","label","ReactCrop","onImageLoaded","onChange","c","onComplete","ref","Button","onClick","image_HTML","Image","canvas","scaleX","naturalWidth","current","clientWidth","scaleY","naturalHeight","clientHeight","width","height","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","base64Image","toDataURL","alt","Upload","accept","showUploadList","beforeUpload","onRemove","InboxOutlined"],"sourceRoot":""}